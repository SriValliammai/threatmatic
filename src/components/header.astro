---
import teallogo from '../assets/logo_teal_img.png';
import logotext from '../assets/teal horizontal logo.png';
import logotext_white from '../assets/white_horizontal.png';
import X from '../assets/x.svg';
import colorThreatmatic from '../assets/ThreatMatic_Horizontal_FullColor.png';
import whiteThreatmatic from '../assets/ThreatMatic_Horizontal_White.png';
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);
import { Menu } from 'lucide-astro';
import { Search } from 'lucide-astro';
import { Sun } from 'lucide-astro';
import { Moon } from 'lucide-astro';
const base = import.meta.env.BASE_URL;

//test
---

 <div class = "max-w-max min-h-max flex justify-center relative">
	
	<div class = "max-w-max h-10 bg-red"><p class="dark:text-slate-200 font-bold ">test</p> </div>
 </div>
 <script src="../scripts/darkmode.js"></script>

 <script>
 
  document.addEventListener('DOMContentLoaded', function () {

	const mainMenuScroll = document.getElementById('mainMenu');
	const white_logo = document.querySelector(".white_logo");
	const dark_logo = document.querySelector(".dark_logo");
	const moon = document.querySelector(".moon");
	

	window.addEventListener('scroll', () => {
		if(mainMenuScroll && dark_logo && white_logo && moon){
			if (window.scrollY > 50) { // Change 50 to the scroll position at which you want the background to change
				mainMenuScroll.classList.add('bg-black/80'); // Add the black background
				mainMenuScroll.classList.add('dark');
				mainMenuScroll.classList.add('transition', 'duration-500', 'ease-in-out');
				white_logo.classList.remove('hidden');
				dark_logo.classList.add('hidden');
				moon.classList.add('text-slate-50');
				


				//console.log(mainMenuScroll.classList);

			} else {
				mainMenuScroll.classList.remove('bg-black/80'); // Remove the black background
				mainMenuScroll.classList.remove('dark');
				moon.classList.remove('text-slate-50');
				const userTheme = localStorage.getItem("theme");
				if (userTheme === 'light') {
					dark_logo.classList.remove('hidden');
					white_logo.classList.add('hidden');
				}
				else if(userTheme === 'dark'){
					white_logo.classList.remove('hidden');
					dark_logo.classList.add('hidden');


				}
				
			}
		}
    
});




	const samllscreenMenu = document.getElementById('smMenu');
	if(samllscreenMenu){
	}
	const button = document.getElementById('myButton');
	if(button){
		button.addEventListener('click', handleClick);
	}

	function handleClick() {
		console.log('test');
		const element = document.getElementById("smMenu");
		const mainmenu = document.getElementById("mainMenu");
		const menuoption = document.getElementById("menuOption");
		const closeButton = document.getElementById("closeButton");
		//const closeButton = document.getElementById("closeButton");
		console.log(element);
		console.log(mainmenu);
		console.log(menuoption);
		console.log(closeButton);
		if (element && mainmenu && menuoption && closeButton) {  
			element.classList.remove('opacity-0');
			mainmenu.classList.remove('z-20');
			element.classList.remove('z-[-1]');
			menuoption.classList.remove('-translate-x-full');
			menuoption.classList.add('translate-x-0');
			menuoption.classList.add("w-8/12");
			menuoption.classList.remove("z-1");
			closeButton.classList.add("z-10");
			closeButton.classList.add("animate-spin-once");


			console.log(element.classList);
			console.log(mainmenu.classList);
			console.log(closeButton.classList);

		} else {
			console.warn("Element not found");
		}
	
  	}

	const close = document.getElementById('closeButton');
	if(close){
		close.addEventListener('click', closeMenu);
	}

	function closeMenu(){

		const element = document.getElementById("smMenu");
		const mainmenu = document.getElementById("mainMenu");
		const menuoption = document.getElementById("menuOption");
		const closeButton = document.getElementById("closeButton");
		if((element && mainmenu && menuoption && closeButton)){
			//closeButton.classList.add("animate-spin-once-back");
			
			
			element.classList.add('opacity-0');
			mainmenu.classList.add('z-20');
			element.classList.add('z-[-1]');
			menuoption.classList.add('-translate-x-full');
			menuoption.classList.remove('translate-x-0');
			menuoption.classList.remove("w-8/12");
			menuoption.classList.add("z-1");
			closeButton.classList.remove("z-10");
			closeButton.classList.remove("animate-spin-once");

			console.log("while closing");
			console.log(element.classList);
			console.log(mainmenu.classList);
			console.log(closeButton.classList);
		}
	}

	
	
	
});
const active = document.querySelector('.active');
if(active){

	active.classList.add('text-black', 'font-bold');

	console.log(active.classList);
}

  </script>

<style>
	@keyframes rotateOnce {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

/* Class to apply the rotation */
.animate-spin-once {
  animation: rotateOnce 0.5s ease-in-out forwards; /* Spins once over 0.5 seconds */
}

.animate-spin-once-back {
  animation: rotateOnce 0.5s ease-in-out backwards; /* Spins once over 0.5 seconds */
}

/* #menuOption {
  transition: transform 0.5s ease-in-out; 
} */

/* .active {
   
   color: white; 
	font-weight: bolder;
}
@media (prefers-color-scheme: dark) {
   .active {
      color: white; 
   }
} */
  </style>

  

